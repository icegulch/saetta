<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>
      {% if page.fileSlug == 'homepage' %}
        {{ site.title }} | {{ site.description }}
      {% elsif title %}
        {{ title }} | {{ site.title }}
      {% else %}
        {{ site.title }}
      {% endif %}
    </title>
    <meta name="generator" content="{{ eleventy.generator }}">
    <meta name="description" content="{{ site.description }}">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% include "og.liquid" %}
    {% include "site_icons.liquid" %}
    {% capture css %}{% include "css/site.css" %}{% endcapture %}
    <style>
      {% if site.env == "production" %}
        {{ css | cssmin }}
      {% else %}
        {{ css }}
      {% endif %}
    </style>
  </head>
  <body>

    {% include "svg-sprite.liquid" %}

    <div class="site-header" role="banner">
      {% include "header" %}
    </div>

    <main class="site-main">
      {% unless page.url == '/' %}
        <h1 class="page-title pattern-bg">
          <div class="container container--squeezed">
            {{ title }}
          </div>
        </h1>
      {% endunless %}
      {{ content }}
    </main>

    <footer class="site-footer">
      {% include "footer" %}
    </footer>

    <script defer>
        const body = document.body;
        const primaryNav = document.querySelector('.header-nav');
        const navToggle = document.querySelector('.mobile-nav-toggle');

        navToggle.addEventListener('click', () => {
          const visibility = primaryNav.getAttribute('data-visible');
          if (visibility === "false") {
            body.classList.add('mobile-menu-active');
            primaryNav.setAttribute('data-visible', true);
            navToggle.setAttribute('aria-expanded', true);
          } else if (visibility === "true") {
            body.classList.remove('mobile-menu-active');
            primaryNav.setAttribute('data-visible', false);
            navToggle.setAttribute('aria-expanded', false);
          }
        });

      {% if page.url == '/products/' %}
        // SLIDE IN ANIMATIONS
        const sliders = document.querySelectorAll(".slide-in");
        const appearOptions = {
          threshold: 0,
          rootMargin: "0px 0px -200px 0px"
        };

        const appearOnScroll = new IntersectionObserver(function (
          entries,
          appearOnScroll
        ) {
          entries.forEach(entry => {
            if (!entry.isIntersecting) {
              return;
            } else {
              entry.target.classList.add("appear");
              appearOnScroll.unobserve(entry.target);
            }
          });
        },
          appearOptions);

        sliders.forEach(slider => {
          appearOnScroll.observe(slider);
        });
      {% endif %}
    </script>

  </body>
</html>